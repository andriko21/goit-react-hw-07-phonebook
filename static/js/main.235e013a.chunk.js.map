{"version":3,"sources":["components/ContactLIst/ContactList.module.css","components/Filter/Filter.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-selectors.js","components/Form/Form.js","helpers/contactsApi.js","components/ContactLIst/ContactList.js","redux/contacts/contacts-operations.js","components/Filter/Filter.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/Form/Form.module.css"],"names":["module","exports","addContact","createAction","removeContact","changeFilter","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","getItemsRender","state","contacts","items","getFilter","filtered","getVisibleItems","createSelector","filter","normalizedFilter","toLowerCase","name","includes","connect","dispatch","addContactItem","data","useState","number","setState","onCHangeInput","ev","prevState","target","value","reset","className","style","container","addContact__container","form","onSubmit","preventDefault","find","currentTarget","alert","contact","id","uuidv4","input","type","pattern","title","required","onChange","button","getContacts","a","axios","get","getObject","console","log","itemsRender","deleteItem","useDispatch","useEffect","contactsActions","api","contacts__container","list","map","item","userName","onClick","App","createReducer","_","action","payload","isLoading","error","combineReducers","middleware","getDefaultMiddleware","store","configureStore","reducer","todosReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.235e013a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__PklR9\",\"item\":\"ContactList_item__1DhbQ\",\"button\":\"ContactList_button__362cN\",\"userName\":\"ContactList_userName__3uhbB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3JAQN\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addContact = createAction(\"contacts/ADD\");\r\nconst removeContact = createAction(\"contacts/REMOVE\");\r\nconst changeFilter = createAction(\"contacts/FILTER\");\r\n\r\nconst fetchContactsRequest = createAction(\"contacts/fetchContactsRequest\");\r\nconst fetchContactsSuccess = createAction(\"contacts/fetchContactsSuccess\");\r\nconst fetchContactsError = createAction(\"contacts/fetchContactsError\");\r\n\r\nexport {\r\n  addContact,\r\n  removeContact,\r\n  changeFilter,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n};\r\n","import { createSelector } from \"reselect\";\r\n\r\nexport const getItemsRender = (state) => state.contacts.items;\r\n\r\nexport const getFilter = (state) => state.contacts.filtered;\r\n\r\nexport const getVisibleItems = createSelector([getItemsRender, getFilter], (items, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n  return items.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n})\r\n","import React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport style from \"./Form.module.css\";\r\nimport { addContact } from \"../../redux/contacts/contacts-actions.js\"\r\nimport { connect } from 'react-redux'\r\nimport { getItemsRender } from \"../../redux/contacts/contacts-selectors\";\r\n\r\n\r\nconst Form = ({ contacts, addContactItem }) => {\r\n  const [state, setState] = useState({\r\n    name: \"\",\r\n    number: \"\",\r\n  });\r\n\r\n  const onCHangeInput = (ev) => {\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [ev.target.name]: ev.target.value,\r\n    }));\r\n\r\n \r\n  };\r\n\r\n  const onSubmit = (ev) => {\r\n    ev.preventDefault();\r\n    if (\r\n      contacts.find(\r\n        ({ name }) => {\r\n          return  name.toLowerCase() === ev.currentTarget.name.value.toLowerCase() \r\n        }\r\n         \r\n      )\r\n    ) {\r\n      return alert(`${ev.currentTarget.name.value} is already registered`);\r\n    }\r\n\r\n    const contact = {\r\n      name: ev.currentTarget.name.value,\r\n      number: ev.currentTarget.number.value,\r\n      id: uuidv4(),\r\n    };\r\n   addContactItem(contact)\r\n    reset()\r\n  };\r\n\r\n  const reset = () => {\r\n    setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={style.container}>\r\n      <h1>Phonebook</h1>\r\n      <div className={style.addContact__container}>\r\n        <h2>Name</h2>\r\n        <form className={style.form} onSubmit={onSubmit}>\r\n          <input\r\n            className={style.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={state.name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={onCHangeInput}\r\n          />\r\n          <h3>Number</h3>\r\n          <input\r\n            className={style.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={state.number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={onCHangeInput}\r\n          />\r\n          <button type=\"submit\" className={style.button}>\r\n            add contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst mapDispatchToProps = dispatch => ({\r\n  addContactItem: data => dispatch(addContact(data))\r\n})\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: getItemsRender(state),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form) ;\r\n","import axios from \"axios\";\r\nconst BASE = \"http://localhost:4040/contacts\";\r\n\r\n// export const getContactsold = async () => {\r\n//   try {\r\n//     const fetchContacts = await axios(`${BASE}`);\r\n//     // console.log(fetchContacts);\r\n//     return fetchContacts.data;\r\n//   } catch (error) {\r\n//     console.log(error);\r\n//   }\r\n// };\r\n\r\nexport const getContacts = async () => {\r\n  try {\r\n    const getObject = await axios.get(`${BASE}`)\r\n    return getObject.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport style from \"./ContactList.module.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { removeContact } from \"../../redux/contacts/contacts-actions\";\r\nimport * as contactsOperations from '../../redux/contacts/contacts-operations'\r\nimport { getVisibleItems } from \"../../redux/contacts/contacts-selectors\";\r\n\r\nconst ContactList = ({ itemsRender, deleteItem }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(contactsOperations.fetchContacts())\r\n  },[dispatch])\r\n  return(\r\n    <>\r\n      {itemsRender && <div className={style.contacts__container}>\r\n      <h2>Contacts</h2>\r\n      <ul className={style.list}>\r\n        {itemsRender.map(({ name, id, number }) => (\r\n          <li className={style.item} key={id}>\r\n            <p className={style.userName}>{name}: </p>\r\n            <p>{number}</p>\r\n            <button\r\n              type=\"button\"\r\n              className={style.button}\r\n              onClick={() => deleteItem(id)}\r\n            >\r\n              delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>}\r\n      </>\r\n  )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    itemsRender: getVisibleItems(state),\r\n  };\r\n\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  deleteItem: (id) => dispatch(removeContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n// export default ContactList\r\n","import * as contactsActions from \"./contacts-actions\";\r\nimport * as api from \"../../helpers/contactsApi\";\r\n\r\nexport const fetchContacts = () => async (dispatch) => {\r\n  contactsActions.fetchContactsRequest();\r\n\r\n  try {\r\n    const contacts = await api.getContacts();\r\n    dispatch(contactsActions.fetchContactsSuccess(contacts));\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport style from \"./Filter.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeFilter } from \"../../redux/contacts/contacts-actions\"\r\nimport { getFilter } from \"../../redux/contacts/contacts-selectors\";\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <>\r\n    <h3>Find contacts by name</h3>\r\n    <input className={style.input} value={value} onChange={onChange} />\r\n  </>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: getFilter(state),\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: (ev) => {\r\n    return dispatch(changeFilter(ev.currentTarget.value))\r\n  }\r\n  \r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Filter);\r\n","import React from \"react\";\n\nimport Form from \"./components/Form/Form\";\nimport ContactList from \"./components/ContactLIst/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nconst App = () => {\n\n  // useEffect(() => {\n  //   if (localStorage.getItem(\"contacts\")) {\n  //     setContacts(JSON.parse(localStorage.getItem(\"contacts\")));\n  //   }\n  // }, []);\n\n  // useEffect(() => {\n  //   try {\n  //     localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  //   } catch {\n  //     throw new Error();\n  //   }\n  // }, [contacts]);\n  return (\n    <>\n      <Form />\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nimport {addContact, removeContact, changeFilter,fetchContactsRequest,fetchContactsSuccess,fetchContactsError} from \"./contacts-actions\"\r\n\r\n// const initialState = [\r\n//   { id: uuidv4(), name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n//   { id: uuidv4(), name: \"Hermione Kline\", number: \"443-89-12\" },\r\n//   { id: uuidv4(), name: \"Eden Clements\", number: \"645-17-79\" },\r\n//   { id: uuidv4(), name: \"Annie Copeland\", number: \"227-91-26\" },\r\n// ];\r\n\r\nconst initialState = [];\r\n\r\nconst items = createReducer(initialState, {\r\n  [fetchContactsSuccess]: (_,action) => action.payload,\r\n  [addContact]: (state, { payload }) => [payload, ...state],\r\n\r\n  [removeContact]: (state, { payload }) =>\r\n    state.filter((contact) => contact.id !== payload),\r\n});\r\n\r\nconst filtered = createReducer(\"\", {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst isLoading = createReducer(false,{\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsError]: () => false,\r\n\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContactsRequest]: () => null,\r\n\r\n  [fetchContactsError]: (_, action) => action.payload,\r\n\r\n});\r\n\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filtered,\r\n  isLoading,\r\n  error\r\n});\r\n","import todosReducer from \"./contacts/contacts-reducer\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport { getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\n\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware(),\r\n  // logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: todosReducer,\r\n  },\r\n  middleware,\r\n});\r\n\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { store };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Form_container__3tJnX\",\"addContact__container\":\"Form_addContact__container__3Hfz_\",\"input\":\"Form_input__2W89M\",\"button\":\"Form_button__391YG\"};"],"sourceRoot":""}