{"version":3,"sources":["components/ContactLIst/ContactList.module.css","components/Filter/Filter.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-selectors.js","helpers/contactsApi.js","components/Form/Form.js","redux/contacts/contacts-operations.js","components/ContactLIst/ContactList.js","components/Filter/Filter.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/Form/Form.module.css"],"names":["module","exports","addContact","createAction","removeContact","changeFilter","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","getItemsRender","state","contacts","items","getFilter","filtered","getLoading","isLoading","getVisibleItems","createSelector","filter","normalizedFilter","toLowerCase","name","includes","BASE","getContacts","a","axios","get","getObject","data","console","log","addContacts","post","removeContacts","id","delete","connect","dispatch","addContactItem","contactsActions","api","error","message","fetchAddContacts","useState","number","setState","onCHangeInput","ev","prevState","target","value","reset","className","style","container","addContact__container","form","onSubmit","preventDefault","find","currentTarget","alert","contact","uuidv4","input","type","pattern","title","required","onChange","button","itemsRender","deleteItem","contactsOperations","useDispatch","loading","useSelector","useEffect","length","contacts__container","list","map","item","userName","onClick","nothing_search","App","createReducer","_","action","payload","combineReducers","middleware","getDefaultMiddleware","store","configureStore","reducer","todosReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.23c4e509.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__PklR9\",\"item\":\"ContactList_item__1DhbQ\",\"button\":\"ContactList_button__362cN\",\"userName\":\"ContactList_userName__3uhbB\",\"nothing_search\":\"ContactList_nothing_search__L9xCg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3JAQN\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addContact = createAction(\"contacts/ADD\");\r\nconst removeContact = createAction(\"contacts/REMOVE\");\r\nconst changeFilter = createAction(\"contacts/FILTER\");\r\n\r\nconst fetchContactsRequest = createAction(\"contacts/fetchContactsRequest\");\r\nconst fetchContactsSuccess = createAction(\"contacts/fetchContactsSuccess\");\r\nconst fetchContactsError = createAction(\"contacts/fetchContactsError\");\r\n\r\nexport {\r\n  addContact,\r\n  removeContact,\r\n  changeFilter,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n};\r\n","import { createSelector } from \"reselect\";\r\n\r\nexport const getItemsRender = (state) => state.contacts.items;\r\n\r\nexport const getFilter = (state) => state.contacts.filtered;\r\nexport const getLoading = (state)=> state.contacts.isLoading\r\n\r\nexport const getVisibleItems = createSelector([getItemsRender, getFilter], (items, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n  return items.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n})\r\n","import axios from \"axios\";\r\nconst BASE = \"http://localhost:3030/contacts\";\r\n\r\nexport const getContacts = async () => {\r\n  try {\r\n    const getObject = await axios.get(`${BASE}`)\r\n    return getObject.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const addContacts = async (data) => {\r\n  try {\r\n    const getObject = await axios.post(`${BASE}/`, data)\r\n    return getObject.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n\r\nexport const removeContacts = async (id) => {\r\n  try {\r\n    const getObject = await axios.delete(`${BASE}/${id}`)\r\n    return getObject.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport style from \"./Form.module.css\";\r\nimport { addContact } from \"../../redux/contacts/contacts-actions.js\"\r\nimport { connect } from 'react-redux'\r\nimport { getItemsRender } from \"../../redux/contacts/contacts-selectors\";\r\nimport { fetchAddContacts } from \"../../redux/contacts/contacts-operations\";\r\n\r\n\r\nconst Form = ({ contacts, addContactItem }) => {\r\n  const [state, setState] = useState({\r\n    name: \"\",\r\n    number: \"\",\r\n  });\r\n\r\n  const onCHangeInput = (ev) => {\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [ev.target.name]: ev.target.value,\r\n    }));\r\n\r\n \r\n  };\r\n\r\n  const onSubmit = (ev) => {\r\n    ev.preventDefault();\r\n    if (\r\n      contacts.find(\r\n        ({ name }) => {\r\n          return  name.toLowerCase() === ev.currentTarget.name.value.toLowerCase() \r\n        }\r\n         \r\n      )\r\n    ) {\r\n      return alert(`${ev.currentTarget.name.value} is already registered`);\r\n    }\r\n\r\n    const contact = {\r\n      name: ev.currentTarget.name.value,\r\n      number: ev.currentTarget.number.value,\r\n      id: uuidv4(),\r\n    };\r\n   addContactItem(contact)\r\n    reset()\r\n  };\r\n\r\n  const reset = () => {\r\n    setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={style.container}>\r\n      <h1>Phonebook</h1>\r\n      <div className={style.addContact__container}>\r\n        <h2>Name</h2>\r\n        <form className={style.form} onSubmit={onSubmit}>\r\n          <input\r\n            className={style.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={state.name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={onCHangeInput}\r\n          />\r\n          <h3>Number</h3>\r\n          <input\r\n            className={style.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={state.number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={onCHangeInput}\r\n          />\r\n          <button type=\"submit\" className={style.button}>\r\n            add contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst mapDispatchToProps = dispatch => ({\r\n  addContactItem: data => dispatch(fetchAddContacts(data))\r\n})\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: getItemsRender(state),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form) ;\r\n","import * as contactsActions from \"./contacts-actions\";\r\nimport * as api from \"../../helpers/contactsApi\";\r\n\r\nexport const fetchContacts = () => async (dispatch) => {\r\n  dispatch(contactsActions.fetchContactsRequest());\r\n\r\n  try {\r\n    const contacts = await api.getContacts();\r\n    dispatch(contactsActions.fetchContactsSuccess(contacts));\r\n  } catch (error) {\r\n    console.log(error);\r\n    contactsActions.fetchContactsError(error.message);\r\n  }\r\n};\r\n\r\nexport const fetchAddContacts = (data) => async (dispatch) => {\r\n    dispatch(contactsActions.fetchContactsRequest());\r\n\r\n  try {\r\n    api.addContacts(data);\r\n    dispatch(contactsActions.addContact(data));\r\n  } catch (error) {\r\n    contactsActions.fetchContactsError(error.message);\r\n  }\r\n};\r\n\r\nexport const fetchDeleteContacts = (id) => async (dispatch) => {\r\n    dispatch(contactsActions.fetchContactsRequest());\r\n  try {\r\n    api.removeContacts(id);\r\n    dispatch(contactsActions.removeContact(id));\r\n  } catch (error) {\r\n    contactsActions.fetchContactsError(error.message);\r\n  }\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport style from \"./ContactList.module.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { removeContact } from \"../../redux/contacts/contacts-actions\";\r\nimport * as contactsOperations from '../../redux/contacts/contacts-operations'\r\nimport { getVisibleItems, getLoading } from \"../../redux/contacts/contacts-selectors\";\r\n\r\nconst ContactList = ({ itemsRender, deleteItem }) => {\r\n  const dispatch = useDispatch();\r\n  const loading = useSelector(getLoading)\r\n\r\n  useEffect(() => {\r\n    dispatch(contactsOperations.fetchContacts())\r\n  }, [dispatch])\r\n  return (\r\n    <>\r\n      {itemsRender.length ? <div className={style.contacts__container}>\r\n        <h2>Contacts</h2>\r\n        <ul className={style.list}>\r\n          {itemsRender.map(({ name, id, number }) => (\r\n            <li className={style.item} key={id}>\r\n              <p className={style.userName}>{name}: </p>\r\n              <p>{number}</p>\r\n              <button\r\n                type=\"button\"\r\n                className={style.button}\r\n                onClick={() => deleteItem(id)}\r\n              >\r\n                delete\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        {console.log(loading)}\r\n      </div> : loading ? <h3>Loading...</h3>: <div className={style.nothing_search}>Nothing to search 🙆‍♂️</div>}\r\n      </>\r\n  )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    itemsRender: getVisibleItems(state),\r\n  };\r\n\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  deleteItem: (id) => dispatch(contactsOperations.fetchDeleteContacts(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n// export default ContactList\r\n","import React from \"react\";\r\nimport style from \"./Filter.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeFilter } from \"../../redux/contacts/contacts-actions\"\r\nimport { getFilter } from \"../../redux/contacts/contacts-selectors\";\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <>\r\n    <h3>Find contacts by name</h3>\r\n    <input className={style.input} value={value} onChange={onChange} />\r\n  </>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: getFilter(state),\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: (ev) => {\r\n    return dispatch(changeFilter(ev.currentTarget.value))\r\n  }\r\n  \r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Filter);\r\n","import React from \"react\";\n\nimport Form from \"./components/Form/Form\";\nimport ContactList from \"./components/ContactLIst/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nconst App = () => {\n\n  // useEffect(() => {\n  //   if (localStorage.getItem(\"contacts\")) {\n  //     setContacts(JSON.parse(localStorage.getItem(\"contacts\")));\n  //   }\n  // }, []);\n\n  // useEffect(() => {\n  //   try {\n  //     localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  //   } catch {\n  //     throw new Error();\n  //   }\n  // }, [contacts]);\n  return (\n    <>\n      <Form />\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nimport {addContact, removeContact, changeFilter,fetchContactsRequest,fetchContactsSuccess,fetchContactsError} from \"./contacts-actions\"\r\n\r\n// const initialState = [\r\n//   { id: uuidv4(), name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n//   { id: uuidv4(), name: \"Hermione Kline\", number: \"443-89-12\" },\r\n//   { id: uuidv4(), name: \"Eden Clements\", number: \"645-17-79\" },\r\n//   { id: uuidv4(), name: \"Annie Copeland\", number: \"227-91-26\" },\r\n// ];\r\n\r\nconst initialState = [];\r\n\r\nconst items = createReducer(initialState, {\r\n  [fetchContactsSuccess]: (_,action) => action.payload,\r\n  [addContact]: (state, { payload }) => [payload, ...state],\r\n\r\n  [removeContact]: (state, { payload }) =>\r\n    state.filter((contact) => contact.id !== payload),\r\n});\r\n\r\nconst filtered = createReducer(\"\", {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst isLoading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContactsRequest]: () => null,\r\n  [fetchContactsError]: (_, action) => action.payload,\r\n\r\n});\r\n\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filtered,\r\n  isLoading,\r\n  error\r\n});\r\n","import todosReducer from \"./contacts/contacts-reducer\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport { getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\n\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware(),\r\n  // logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: todosReducer,\r\n  },\r\n  middleware,\r\n});\r\n\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { store };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Form_container__3tJnX\",\"addContact__container\":\"Form_addContact__container__3Hfz_\",\"input\":\"Form_input__2W89M\",\"button\":\"Form_button__391YG\"};"],"sourceRoot":""}